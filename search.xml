<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[mac环境变量配置及其理解&软连接]]></title>
    <url>%2F2017%2F10%2F28%2Fmac%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%85%B6%E7%90%86%E8%A7%A3-%E8%BD%AF%E8%BF%9E%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[什么是环境变量所谓环境变量，通俗的理解就是命令的路径譬如我的mac里安装了jdk1.6,jdk1.8那么当我执行javac指令的时候，改使用哪一个版本呢？ 这个时候就可以通过设置环境变量来确定。 export JDK1.7=/usr/apps/jdk1.7export JDK1.8=/usr/apps/jdk1.8export PATH=$JDK1.7/bin 通过这样，将jdk1.7加入环境变量，即指定我默认的jdk版本是1.6 对于其他的命令亦此。 环境变量的作用就是就是用户可以在操作系统的各个目录之下，都能访问到所需要的工具目录内的内容。 mac的环境变量 查看当前环境变量 echo $PATH 分为全局用户环境变量，以及单个用户环境变量。 全局用户环境变量在： /etc/bashrc /etc/profile 单个用户的环境变量在 ~/.bash_profile 一般在~/.bash_profile修改环境变量，不需要修改全局用户变量 注：全局环境变量只有root用户才有权限修改，对于普通用户是只读的，用户要sudo才可以修改。 sudo vim /etc/bashrc 修改环境变量 cd ~vim .bash_profileexport PATH=…..:$PATHsource .bash_profile 如果是修改或者是新增环境变量的值，要source一下才会生效。 什么是软连接？硬连接 硬链接 异名同体 软连接 快捷方式 reference: Linux软连接和硬链接 Mac 中环境变量的配置和理解]]></content>
  </entry>
  <entry>
    <title><![CDATA[MacDown的基本使用]]></title>
    <url>%2F2017%2F10%2F27%2FMacDown%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[最近一直在寻找Mac上的比较好用的markdown编辑器，由于mac平台上有太多MarkDown编辑器，Typora，Mou,Ulysses,iA Writer，等等，工具太多，不知道如何选择，我索性就都下载下来，一个个试用，最后感觉还是macdown我比较喜欢。Macdown的好处是，使用简单，它的界面分为两栏，左栏编辑，右栏实时预览，我觉得这样很好，比较适合我这样的Markdown新手。好吧，下面介绍一下什么是Macdown以及基本语法。 什么是Macdown?MacDown是一个开源的，MarkDown语法编辑器，用于macOS平台。类似于Mou; here is the download link. 如果你安装了homebrew的话，可以直接用brew安装:brew cask install macdown Macdown的基本语法同其他编辑器一样，语法无非是标题，链接，图片，代码块什么的。 换行 行末加两个空格，然后回车 强调 加黑 **要加黑的内容** eg:我变黑了 加黄 &lt;mark&gt;要加黄的内容&lt;/mark&gt; eg:我是黄的 删除线 &lt;del&gt;要删除的内容&lt;/del&gt; eg：别删我 上脚注 我在下面&lt;sup&gt;我在上面&lt;/sup&gt; 我在下面我在上面 标题 这个不多说了，#，##，，，######标题依次为一级，二级，，六级，字号依次减小 特别的，使用二级标题的时候，在标题下面后有一条水平线 加链接以及图片 直接加链接：&lt;url&gt;即可，即直接在链接两侧加上&lt; &gt; 给链接起名字 [name](url)即可， 在文章中添加很多链接会显得很凌乱，特别是当链接比较长的时候，这样的情况下，我们可以这样做。将定义统一放在文章末尾，文中进行引用即可。 定义：[name]:URL引用：[name] 引用图片方法和上面类似，图片可以在本地，也可以通过url 定义：[picture name]:URL or PATH引用：![picture name] 插入代码 行代码只需要在其两侧加 `符号即可。 include&lt;stdio.h&gt; 插入代码块可以通过，缩进4个空格，或者代码块两端加。注意：插入代码块之前要空一行 块引用 first second term eg: fisrtsecondthird term1 term2 水平线*三个星号 表格 name number laji 1512 name score —– —— flt 100 laji 0 name number laji 1512 name score flt 100 laji 0]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>macdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ictclass 简介]]></title>
    <url>%2F2017%2F10%2F27%2Fictclass-%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[lucene简介]]></title>
    <url>%2F2017%2F10%2F27%2Flucene%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[Mac docker安装]]></title>
    <url>%2F2017%2F10%2F26%2FMac-docker%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[ifconfig命令学习笔记]]></title>
    <url>%2F2017%2F10%2F26%2Fifconfig%2F</url>
    <content type="text"><![CDATA[ifconfig=interfaces config 命令格式： ifconfig [网络设备][参数] 功能 查看和配置网络设备，当网络环境发生改变的时候可以通过该命令对网络进行相应的配置。 命令参数 up 启动相应的网络设备/网卡 down 关闭指定的网络设备/网卡 arp 设置指定网卡是都支持ARP协议 -promisc 设置是否支持网卡的promiscuous模式 -allmulti 设置是否支持多播模式，如果选择该参数，网卡将接受网络中所有的多播数据包 -a 显示全部接口信息 -s 显示摘要信息 add 给指定网卡配置ipv6地址 del 删除指定网卡的ipv6地址 mtu&lt;字节数&gt; 设置网卡的最大传输单元 netmask&lt;子网掩码&gt; 设置网卡的子网掩码 tunel 建立隧道 dsaddr 设定一个远端地址，建立点对点通信 -broadcst&lt;地址&gt; 为指定网卡设置广播协议 -pointtopoint&lt;地址&gt; 为网卡设置点对点通讯协议 multicast 为网卡设置组播标识 address 为网卡设置IPV4地址 使用实例 查看设备信息 第一行：连接类型：以太网 硬件地址即MAC地址：… 第二行：inet 地址表示网卡的IP地址：10.211.55.5广播地址：10.211.55.255子网掩码：255.255.255.0 第六行：网卡的状态 UP:网卡处于开启状态 RUNNING：网卡的网线被插上 MULTICAST：允许组播 MTU=1500：最大传输单元1500字节 关闭开启网卡 sudo ifconfig eth1 down sudo ifconfig eth1 down 删除/添加ipv6地址 sudo ifconfig eth1 del/add ipv6-addr before after 修改MAC地址 sudo ifconfig eth1 hw ether MAC_ADDR 修改IP地址 sudo ifconfig eth1 IP_ADDR netmask ADDR broadcasr ADDR 其他操作 关闭或启动arp协议 ifconfig eth1 arp ifconfig eth1 -arp 设置最大传输单元 ifconfig eth1 mtu 1500 Note:用ifconfig命令配置的网卡信息，在网卡重启后机器重启后，配置就不存在。要想将上述的配置信息永远的存的电脑里，那就要修改网卡的配置文件了参考：reference]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ifconfig</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pl0笔记]]></title>
    <url>%2F2017%2F10%2F26%2Fpl0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[#pl0笔记 ##第一部分 pl0语言及其编译器 pl0语言介绍 pl0设计语言是一个比较简单的语言，它以赋值语句为基础，构造概念有顺序，条件，循环三种。pl0有子程序的概念，包括过程定义（可以嵌套）与调用且有局部变量说明。pl0唯一的数据类型是整型，可以用来说明该类型的变量和常量。当然pl0也具有通常的算术与逻辑运算。具体的pl0语法图如下所示。 pl0语言编译器 pl0编译器的基本工作流程如下图所示： 语法分析完成以下工作 1.跳过分隔符，即空格，回车，制表符 2.识别保留字，如begin，end，if ，while等 3.识别非保留字的 一般标志符，将次标志符赋值给全局量id，而全局量sym赋值为sym_identifier 4.识别数字序列，当前值赋值给全局量num,sym被赋值为sym_number 5.是被：=,&lt;=,&gt;=等特殊符号，全局量sym被赋值为sym_becomes,sym_leq,sym_gtr等。 相关函数有getsym(),getch(),其中getch()为获取单个字符函数，除此之外，它还完成: 识别且跳过行结束符 将输入源文件复写到输出文件 产生一份程序列表，输出相应行号或者指令计数器的值注意getch()识别一个字符后，文件指针指向下一个，而getc()不会。 语法分析 ###pl0的指令集 pl0的指令集包含7种指令，分别是：（1) LIT 将常数压栈（2) LOD 将变量值压栈（3) STO 将栈顶的值赋予某变量（4) CAL 过程调用（5) INT 在数据栈中分配存储空间（6) JMP,JPC 用于if,while语句的条件或者无条件控制转移指令（7) OPR 算术逻辑指令 指令格式 F,L,A的含义见下表 ![ins]]]></content>
  </entry>
</search>
