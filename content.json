{"meta":{"title":"Rat-racer's Blog","subtitle":null,"description":null,"author":"Lintao Fang","url":"http://yoursite.com"},"pages":[{"title":"关于我","date":"2017-10-26T14:16:16.000Z","updated":"2017-10-26T14:16:16.000Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"完美主义者，生性懒惰，没什么好介绍的，就一学渣渣，GPA渣渣"},{"title":"书单","date":"2017-10-26T12:51:13.000Z","updated":"2017-10-26T11:39:15.000Z","comments":false,"path":"books/index.html","permalink":"http://yoursite.com/books/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2017-10-26T14:05:25.000Z","updated":"2017-10-26T11:39:15.000Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-10-26T12:53:55.000Z","updated":"2017-10-26T11:39:15.000Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2017-10-26T12:51:21.000Z","updated":"2017-10-26T11:39:15.000Z","comments":false,"path":"repository/index.html","permalink":"http://yoursite.com/repository/index.html","excerpt":"","text":""},{"title":"分类","date":"2017-10-26T14:05:18.000Z","updated":"2017-10-26T11:39:15.000Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"pl0笔记","slug":"pl0笔记","date":"2017-10-26T11:26:43.000Z","updated":"2017-10-26T11:32:08.000Z","comments":true,"path":"2017/10/26/pl0笔记/","link":"","permalink":"http://yoursite.com/2017/10/26/pl0笔记/","excerpt":"","text":"#pl0笔记 ##第一部分 pl0语言及其编译器 pl0语言介绍 pl0设计语言是一个比较简单的语言，它以赋值语句为基础，构造概念有顺序，条件，循环三种。pl0有子程序的概念，包括过程定义（可以嵌套）与调用且有局部变量说明。pl0唯一的数据类型是整型，可以用来说明该类型的变量和常量。当然pl0也具有通常的算术与逻辑运算。具体的pl0语法图如下所示。 pl0语言编译器 pl0编译器的基本工作流程如下图所示： 语法分析完成以下工作 1.跳过分隔符，即空格，回车，制表符 2.识别保留字，如begin，end，if ，while等 3.识别非保留字的 一般标志符，将次标志符赋值给全局量id，而全局量sym赋值为sym_identifier 4.识别数字序列，当前值赋值给全局量num,sym被赋值为sym_number 5.是被：=,&lt;=,&gt;=等特殊符号，全局量sym被赋值为sym_becomes,sym_leq,sym_gtr等。 相关函数有getsym(),getch(),其中getch()为获取单个字符函数，除此之外，它还完成: 识别且跳过行结束符 将输入源文件复写到输出文件 产生一份程序列表，输出相应行号或者指令计数器的值注意getch()识别一个字符后，文件指针指向下一个，而getc()不会。 语法分析 ###pl0的指令集 pl0的指令集包含7种指令，分别是：（1) LIT 将常数压栈（2) LOD 将变量值压栈（3) STO 将栈顶的值赋予某变量（4) CAL 过程调用（5) INT 在数据栈中分配存储空间（6) JMP,JPC 用于if,while语句的条件或者无条件控制转移指令（7) OPR 算术逻辑指令 指令格式 F,L,A的含义见下表 ![ins]","categories":[],"tags":[]},{"title":"","slug":"ifconfig学习","date":"2017-10-25T13:33:28.000Z","updated":"2017-10-25T14:33:01.000Z","comments":true,"path":"2017/10/25/ifconfig学习/","link":"","permalink":"http://yoursite.com/2017/10/25/ifconfig学习/","excerpt":"","text":"#ifconfig————-linux指令 ifconfig=interfaces config 命令格式： ifconfig [网络设备][参数] 功能 查看和配置网络设备，当网络环境发生改变的时候可以通过该命令对网络进行相应的配置。 命令参数 up 启动相应的网络设备/网卡 down 关闭指定的网络设备/网卡 arp 设置指定网卡是都支持ARP协议 -promisc 设置是否支持网卡的promiscuous模式 -allmulti 设置是否支持多播模式，如果选择该参数，网卡将接受网络中所有的多播数据包 -a 显示全部接口信息 -s 显示摘要信息 add 给指定网卡配置ipv6地址 del 删除指定网卡的ipv6地址 mtu&lt;字节数&gt; 设置网卡的最大传输单元 netmask&lt;子网掩码&gt; 设置网卡的子网掩码 tunel 建立隧道 dsaddr 设定一个远端地址，建立点对点通信 -broadcst&lt;地址&gt; 为指定网卡设置广播协议 -pointtopoint&lt;地址&gt; 为网卡设置点对点通讯协议 multicast 为网卡设置组播标识 address 为网卡设置IPV4地址 ##使用实例 查看设备信息 第一行：连接类型：以太网 硬件地址即MAC地址：… 第二行：inet 地址表示网卡的IP地址：10.211.55.5广播地址：10.211.55.255子网掩码：255.255.255.0 第六行：网卡的状态 UP:网卡处于开启状态 RUNNING：网卡的网线被插上 MULTICAST：允许组播 MTU=1500：最大传输单元1500字节 关闭开启网卡 sudo ifconfig eth1 down sudo ifconfig eth1 down 删除/添加ipv6地址 sudo ifconfig eth1 del/add ipv6-addr before after 修改MAC地址 sudo ifconfig eth1 hw ether MAC_ADDR 修改IP地址 sudo ifconfig eth1 IP_ADDR netmask ADDR broadcasr ADDR 其他操作 关闭或启动arp协议 ifconfig eth1 arp ifconfig eth1 -arp 设置最大传输单元 ifconfig eth1 mtu 1500 ###Note:用ifconfig命令配置的网卡信息，在网卡重启后机器重启后，配置就不存在。要想将上述的配置信息永远的存的电脑里，那就要修改网卡的配置文件了 参考：reference","categories":[],"tags":[]}]}